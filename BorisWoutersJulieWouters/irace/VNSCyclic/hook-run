#!/bin/bash
###############################################################################
# This hook is to tune the VNS algorithm.
#
# PARAMETERS:
# $1 is the instance name  
# $2 is the candidate number
# The rest ($* after `shift 2') are parameters to run VNS
#
# RETURN VALUE:
# This hook should print a single numerical value (the value to be minimized)
###############################################################################

# Path to the VNS algorithm for cyclic problems
EXE=/home/julie/Documents/Capita3/VNSCyclic/algorithm/vns/vns.jar

# The instance name and the candidate id are the first parameters
INSTANCE=$1
CANDIDATE=$2

# All other parameters are the candidate parameters to be passed to VNS
shift 2 || exit 1
CAND_PARAMS=$*

STDOUT="c${CANDIDATE}.txt"

# In case of error, we print the current time:
error() {
    echo "`TZ=UTC date`: error: $@" >&2
    exit 1
}

# Now we can call VNS by building a command line with all parameters for it
java -jar $EXE c $INSTANCE ${CAND_PARAMS} ${STDOUT}

# The output of the candidate $CANDIDATE should be written in the file 
# c${CANDIDATE}.stdout (see hook run for ACOTSP). Does this file exist?
if [ ! -s "${STDOUT}" ]; then
    # In this case, the file does not exist. Let's exit with a value 
    # different from 0. In this case irace will stop with an error.
    error "${STDOUT}: No such file or directory"
fi

# Ok, the file exist. It contains the cost of the final solution.
# The following line is to extract
# this value from the file containing VNS output.
COST='cat ${STDOUT}'

# Print it!
echo "$COST"

# We are done with our duty. Clean files and exit with 0 (no error).
rm -f "${STDOUT}" "${STDERR}"
rm -f best.* stat.* cmp.*
exit 0
